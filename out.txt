time =  2481.862
face_dimensions =  [65, 257, 257]
-5.000000e-01 -2.000000e+00 -2.000000e+00
box_origin =  [-0.5, -2.0, -2.0]
1.562500e-02 1.562500e-02 1.562500e-02
grid_spacing =  [0.015625, 0.015625, 0.015625]
cell_dimensions =  [256 256  64]  num_cells =  4194304
SCALARS
start loading scalars !! 
loading array_name =  density
is,ie =  297 16777513
data[density].shape=  (256, 256, 64)
VECTORS
VECTORS
start loading vectors !! 
loading array_name =  momentum
VECTORS
VECTORS
start loading vectors !! 
loading array_name =  cell_centered_B
============ start to find current sheet ===============
after  7  iterations: 
find threshold current sheet magnitude
jth^2 =  102.308858739  0.25*qdiss_tot =  96651556.1403  actual qdiss =  96768983.1659
time cost for the estimate jth:  0.482393980026  seconds
identified  361  current sheets in total!
time cost for the identify features:  0.527612924576  seconds
time cost for construct jlist:  56.9637269974  seconds
time cost for sort jlist:  0.000205039978027  seconds
the top 5 sheets in size:  [69268, 64255, 46738, 30234, 23336]
time cost for pickle dump:  13.9207510948  seconds
============ start to find null points ===============
time cost for constructing location:  30.5729830265  seconds
time cost for reduction [step1]:  140.883255959  seconds
time cost for reduction [step2]:  1.17674183846  seconds
identified  878857  candidate cells after reduction
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
main.py:217: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
time cost for Bx=By=0:  39.7165970802  seconds
35493  cells left
main.py:272: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
time cost for By=Bz=0:  16.5220069885  seconds
19096  cells left
main.py:327: RuntimeWarning: invalid value encountered in divide
  sol2 = -(a2+b2*sol1)/(c2+d2*sol1)
time cost for the Bx=Bz=0:  7.84689497948  seconds
12382  cells left
identified  12382  magnetic null points

